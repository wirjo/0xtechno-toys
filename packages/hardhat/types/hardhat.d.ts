/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "EIP712Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Base__factory>;
    getContractFactory(
      name: "NativeMetaTransaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeMetaTransaction__factory>;
    getContractFactory(
      name: "ERC721Tradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Tradable__factory>;
    getContractFactory(
      name: "ProxyRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyRegistry__factory>;
    getContractFactory(
      name: "Fuzz",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fuzz__factory>;
    getContractFactory(
      name: "Gonk",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Gonk__factory>;
    getContractFactory(
      name: "Lazarus",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lazarus__factory>;
    getContractFactory(
      name: "MasFashion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MasFashion__factory>;
    getContractFactory(
      name: "MasPass",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MasPass__factory>;
    getContractFactory(
      name: "PolyGonk",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PolyGonk__factory>;
    getContractFactory(
      name: "Toy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Toy__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "EIP712Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Base>;
    getContractAt(
      name: "NativeMetaTransaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeMetaTransaction>;
    getContractAt(
      name: "ERC721Tradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Tradable>;
    getContractAt(
      name: "ProxyRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyRegistry>;
    getContractAt(
      name: "Fuzz",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Fuzz>;
    getContractAt(
      name: "Gonk",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Gonk>;
    getContractAt(
      name: "Lazarus",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Lazarus>;
    getContractAt(
      name: "MasFashion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MasFashion>;
    getContractAt(
      name: "MasPass",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MasPass>;
    getContractAt(
      name: "PolyGonk",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PolyGonk>;
    getContractAt(
      name: "Toy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Toy>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
